{"version":3,"sources":["store/actionTypes.js","components/Task.js","store/actions.js","components/TaskList.js","components/AddNewTask.js","App.js","reportWebVitals.js","store/reducer.js","store/store.js","index.js"],"names":["TASK_ADD","TASK_TOGGLE","TASK_REMOVE","Task","task","id","title","completed","dispatch","useDispatch","ListGroup","Item","className","Form","Check","type","label","checked","onChange","payload","toggleTask","onClick","removeTask","TaskList","tasks","length","map","AddNewTask","useState","taskTitle","setTaskTitle","InputGroup","FormControl","placeholder","value","e","target","Append","Button","variant","addTask","App","useSelector","state","Container","Row","Col","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","lastId","taskStore","createStore","action","filter","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.850aeabc.chunk.js","sourcesContent":["\nexport const TASK_ADD = 'TASK_ADD';\nexport const TASK_TOGGLE = 'TASK_TOGGLE';\nexport const TASK_REMOVE = 'TASK_REMOVE';","\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Form, ListGroup } from \"react-bootstrap\";\nimport { toggleTask, removeTask } from \"../store/actions\";\n\nfunction Task({ task }) {\n    const { id, title, completed } = task;\n    const dispatch = useDispatch();\n\n    return (\n        <ListGroup.Item className={completed && 'task-completed'}>\n            <Form.Check\n                id={id}\n                type=\"checkbox\"\n                label={title}\n                checked={completed}\n                onChange={() => dispatch(toggleTask(id))}\n            />\n            <div className=\"list-group-item-actions\">\n                <span onClick={() => dispatch(removeTask(id))}>Delete</span>\n            </div>\n        </ListGroup.Item>\n    )\n}\n\nexport default Task;","\nimport { TASK_ADD, TASK_REMOVE, TASK_TOGGLE } from './actionTypes';\n\nexport const addTask = (task) => ({\n    type: TASK_ADD,\n    payload: task,\n});\n\nexport const toggleTask = id => ({\n    type: TASK_TOGGLE,\n    payload: { id },\n});\n\nexport const removeTask = id => ({\n    type: TASK_REMOVE,\n    payload: { id },\n})","\nimport React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport Task from './Task';\n\nfunction TaskList({ tasks }) {\n    if (tasks.length) {\n        return (\n            <ListGroup>\n                {tasks.map((task) => {\n                    return <Task key={task.id} task={task} />\n                })}\n            </ListGroup>\n        )\n    } else return (\n        <div className=\"list-group-message\">\n            <span>You are free! Do you want some work? &#128521;</span>\n        </div>\n    );\n}\n\nexport default TaskList;","\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, FormControl, InputGroup } from \"react-bootstrap\";\n\nimport { addTask } from \"../store/actions\";\n\n\nfunction AddNewTask({ task }) {\n    const [taskTitle, setTaskTitle] = useState('');\n    const dispatch = useDispatch();\n\n    const handleTaskTitleChange = (event) => {\n        setTaskTitle(event.target.value);\n    }\n\n    const handleTaskSubmit = () => {\n        dispatch(addTask({\n            title: taskTitle\n        }));\n        setTaskTitle('');\n    }\n\n    return (\n        <InputGroup className=\"mb-3\">\n            <FormControl placeholder=\"Add new task\" value={taskTitle} onChange={e => handleTaskTitleChange(e)} />\n            <InputGroup.Append>\n                <Button variant=\"outline-secondary\" onClick={handleTaskSubmit}>Save</Button>\n            </InputGroup.Append>\n        </InputGroup>\n    )\n}\n\nexport default AddNewTask;","\nimport React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Container, Col, Row } from \"react-bootstrap\";\n\nimport TaskList from \"./components/TaskList\";\nimport AddNewTask from \"./components/AddNewTask\";\nimport './App.css';\n\nfunction App() {\n\n  const tasks = useSelector(state => state);\n  return (\n    <Container className=\"main-app-container\">\n      <Row className=\"mb-4\">\n        <Col className=\"mt-4\">\n          <AddNewTask />\n        </Col>\n      </Row>\n      <Row>\n        <Col md={12}>\n          <h4>Task List</h4>\n        </Col>\n        <Col>\n          <TaskList tasks={tasks} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport { TASK_ADD, TASK_REMOVE, TASK_TOGGLE } from './actionTypes';\n\nlet lastId = 0;\n\nexport default function reducer(state = [], action) {\n\n    const { type, payload } = action;\n\n    switch (type) {\n        case TASK_ADD:\n            return [...state, {\n                id: ++lastId, // увеличиваем id на единицу\n                title: payload.title, //в качестве title задаем значение переданное пользователем\n                completed: false,  // у нового таска статус будет не выполнен\n            }];\n        case TASK_TOGGLE:\n            return state.map(task => {\n                if (task.id === payload.id)\n                    return { ...task, completed: !task.completed }\n                return task;\n            });\n        case TASK_REMOVE:\n            return state.filter(task => action.payload.id !== task.id);\n        default:\n            return state;\n    }\n}","\nimport { createStore } from 'redux';\nimport reducer from \"./reducer\";\n\nconst taskStore = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default taskStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './store/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}